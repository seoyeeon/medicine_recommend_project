{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAMSUNG\\\\Desktop\\\\\\uACF5\\uBAA8\\uC804\\\\medicine_recommend_project\\\\medicine_recommend_project\\\\client\\\\src\\\\components\\\\SymptomsCheck.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './SymptomsCheck.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SymptomsCheck() {\n  _s();\n  const [selectedSymptoms, setSelectedSymptoms] = useState([]);\n  const navigate = useNavigate();\n  const handleCheckboxChange = event => {\n    const {\n      value,\n      checked\n    } = event.target;\n    if (checked) {\n      setSelectedSymptoms([...selectedSymptoms, value]);\n    } else {\n      setSelectedSymptoms(selectedSymptoms.filter(symptom => symptom !== value));\n    }\n  };\n  const handleSubmit = () => {\n    navigate('/results', {\n      state: {\n        selectedSymptoms\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"symptoms-check-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"symptoms-check-header\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"logo1.png\",\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"symptoms-check-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"symptoms-title\",\n        children: \"\\uC5B4\\uB514\\uAC00 \\uBD88\\uD3B8\\uD558\\uC2E0\\uAC00\\uC694?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox-group\",\n        children: ['Fever', 'Cough', 'Headache', 'Fatigue'].map((symptom, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: `checkbox-container ${selectedSymptoms.includes(symptom) ? 'checked' : ''}`,\n          htmlFor: `checkbox-${index}` // 각 체크박스에 고유한 ID 추가\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: `checkbox-${index}`,\n            value: symptom,\n            onChange: handleCheckboxChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), symptom]\n        }, symptom, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"submit-button\",\n        children: \"\\uACB0\\uACFC \\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(SymptomsCheck, \"2BuUW8m8Ad/Erty624i1NG4I5G8=\", false, function () {\n  return [useNavigate];\n});\n_c = SymptomsCheck;\nexport default SymptomsCheck;\nvar _c;\n$RefreshReg$(_c, \"SymptomsCheck\");","map":{"version":3,"names":["React","useState","Link","useNavigate","jsxDEV","_jsxDEV","SymptomsCheck","_s","selectedSymptoms","setSelectedSymptoms","navigate","handleCheckboxChange","event","value","checked","target","filter","symptom","handleSubmit","state","className","children","to","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","index","includes","htmlFor","type","id","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/SAMSUNG/Desktop/공모전/medicine_recommend_project/medicine_recommend_project/client/src/components/SymptomsCheck.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './SymptomsCheck.css';\r\n\r\nfunction SymptomsCheck() {\r\n  const [selectedSymptoms, setSelectedSymptoms] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const handleCheckboxChange = (event) => {\r\n    const { value, checked } = event.target;\r\n    if (checked) {\r\n      setSelectedSymptoms([...selectedSymptoms, value]);\r\n    } else {\r\n      setSelectedSymptoms(selectedSymptoms.filter(symptom => symptom !== value));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    navigate('/results', { state: { selectedSymptoms } });\r\n  };\r\n\r\n  return (\r\n    <div className=\"symptoms-check-container\">\r\n      <header className=\"symptoms-check-header\">\r\n        <Link to=\"/\">\r\n          <img src=\"logo1.png\" className=\"App-logo\" alt=\"logo\" />\r\n        </Link>\r\n      </header>\r\n      <main className=\"symptoms-check-main\">\r\n        <h2 className=\"symptoms-title\">어디가 불편하신가요?</h2>\r\n        <div className=\"checkbox-group\">\r\n          {['Fever', 'Cough', 'Headache', 'Fatigue'].map((symptom, index) => (\r\n            <label\r\n              key={symptom}\r\n              className={`checkbox-container ${selectedSymptoms.includes(symptom) ? 'checked' : ''}`}\r\n              htmlFor={`checkbox-${index}`} // 각 체크박스에 고유한 ID 추가\r\n            >\r\n              <input\r\n                type=\"checkbox\"\r\n                id={`checkbox-${index}`}\r\n                value={symptom}\r\n                onChange={handleCheckboxChange}\r\n              />\r\n              {symptom}\r\n            </label>\r\n          ))}\r\n        </div>\r\n        <button onClick={handleSubmit} className=\"submit-button\">\r\n          결과 보기\r\n        </button>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SymptomsCheck;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}