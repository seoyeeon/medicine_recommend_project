{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAMSUNG\\\\Desktop\\\\\\uACF5\\uBAA8\\uC804\\\\medicine_recommend_project\\\\medicine_recommend_project\\\\client\\\\src\\\\components\\\\SearchResults.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport './SearchResults.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchResults() {\n  _s();\n  const location = useLocation();\n  const query = new URLSearchParams(location.search).get('query');\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const encodedQuery = encodeURIComponent(query); // 검색어를 URL에 맞게 인코딩\n        const response = await axios.get(`/api/medicines?query=${encodedQuery}`);\n        setResults(response.data); // 검색 결과를 state에 저장\n      } catch (error) {\n        // Axios 에러 로그 확인\n        if (error.response) {\n          // 서버가 응답을 보냈으나 에러 상태일 때 (예: 4xx, 5xx)\n          console.error('서버 응답 오류:', error.response.status, error.response.data);\n        } else if (error.request) {\n          // 요청이 전송되었으나 서버로부터 응답을 받지 못한 경우\n          console.error('서버 응답 없음:', error.request);\n        } else {\n          // 기타 에러\n          console.error('Axios 설정 오류:', error.message);\n        }\n        console.error('전체 에러 정보:', error.config); // Axios 설정 정보를 출력\n      }\n    };\n    if (query) {\n      fetchData();\n    }\n  }, [query]); // query가 변경될 때마다 실행\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-results-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\uAC80\\uC0C9 \\uACB0\\uACFC: \\\"\", query, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"results-list\",\n      children: results.length > 0 ? results.map((result, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"result-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: result.Medicine_Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:3000${result.Image_Path}`,\n          alt: result.Medicine_Name,\n          className: \"medicine-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC131\\uBD84: \", result.Main_Ingredients]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD6A8\\uACFC: \", result.Effects]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uBCF5\\uC6A9\\uB7C9: \", result.Dosage_by_Age]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC81C\\uC57D\\uD68C\\uC0AC: \", result.Pharmaceutical_Company]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"\\uAC80\\uC0C9 \\uACB0\\uACFC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchResults, \"qCqwB+I2IRG6N4Ze3iM8p88rvnA=\", false, function () {\n  return [useLocation];\n});\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","axios","jsxDEV","_jsxDEV","SearchResults","_s","location","query","URLSearchParams","search","get","results","setResults","fetchData","encodedQuery","encodeURIComponent","response","data","error","console","status","request","message","config","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","result","index","Medicine_Name","src","Image_Path","alt","Main_Ingredients","Effects","Dosage_by_Age","Pharmaceutical_Company","_c","$RefreshReg$"],"sources":["C:/Users/SAMSUNG/Desktop/공모전/medicine_recommend_project/medicine_recommend_project/client/src/components/SearchResults.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './SearchResults.css';\r\n\r\nfunction SearchResults() {\r\n  const location = useLocation();\r\n  const query = new URLSearchParams(location.search).get('query');\r\n  const [results, setResults] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const encodedQuery = encodeURIComponent(query);  // 검색어를 URL에 맞게 인코딩\r\n        const response = await axios.get(`/api/medicines?query=${encodedQuery}`);\r\n        setResults(response.data);  // 검색 결과를 state에 저장\r\n      } catch (error) {\r\n          // Axios 에러 로그 확인\r\n          if (error.response) {\r\n            // 서버가 응답을 보냈으나 에러 상태일 때 (예: 4xx, 5xx)\r\n            console.error('서버 응답 오류:', error.response.status, error.response.data);\r\n          } else if (error.request) {\r\n            // 요청이 전송되었으나 서버로부터 응답을 받지 못한 경우\r\n            console.error('서버 응답 없음:', error.request);\r\n          } else {\r\n            // 기타 에러\r\n            console.error('Axios 설정 오류:', error.message);\r\n          }\r\n          console.error('전체 에러 정보:', error.config);  // Axios 설정 정보를 출력\r\n        }\r\n    };\r\n\r\n    if (query) {\r\n      fetchData();\r\n    }\r\n  }, [query]);  // query가 변경될 때마다 실행\r\n\r\n  return (\r\n    <div className=\"search-results-container\">\r\n      <h1>검색 결과: \"{query}\"</h1>\r\n      <ul className=\"results-list\">\r\n        {results.length > 0 ? (\r\n          results.map((result, index) => (\r\n            <li key={index} className=\"result-item\">\r\n              <h2>{result.Medicine_Name}</h2>\r\n              <img src={`http://localhost:3000${result.Image_Path}`} alt={result.Medicine_Name} className=\"medicine-image\" />\r\n              <p>성분: {result.Main_Ingredients}</p>\r\n              <p>효과: {result.Effects}</p>\r\n              <p>복용량: {result.Dosage_by_Age}</p>\r\n              <p>제약회사: {result.Pharmaceutical_Company}</p>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <li>검색 결과가 없습니다.</li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchResults;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}